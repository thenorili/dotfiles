# set -g default-shell /usr/bin/fish
set -g set-clipboard on

# Turn mouse mode on (use mouse to resize panes for instance)
setw -g mouse off
# Allow switching the currently focused pane by mouse click.
# set-option -g mouse-select-pane on

# Set the title of the current window to something descriptive for the entire
# tmux session. This results in the current window being called:
# "1. neon-vm:0.0.0 emacsclient justinlilly@neon-vm:~"
set-option -g set-titles on
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name, active(or not)

# QUIET
set-option -g bell-action none
set-option -g visual-activity off
set-option -g visual-bell off
setw -g monitor-activity off


# When a smaller terminal connects to a tmux client, it shrinks to fit it. The
# clients attached with bigger displays see this constrained view.
# aggressive-resize makes it such that the window is only resized if the
# smaller client is actively looking at it.
setw -g aggressive-resize on

# change prefix command to C-z -- internal tmux is C-z, external is C-z
unbind C-b
set-option -g prefix C-z
bind z last-window
bind C-z send-prefix

# Use PageUp to enter copy mode and scroll up
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n M-Pageup if-shell "$is_vim" "copy-mode -u"

# Status line options
set -g status-bg black
set -g status-fg green
set -g status-left-length 50
set -g status-left ' #[fg=cyan,bright]#h#[fg=green]:#[fg=white]#S#[fg=green] | #[default]'
#set -g status-left ' #[fg=cyan,bright]#10H#[fg=green]:#[fg=white]#S#[fg=green] | #[default]'
set -g status-right '| #[fg=yellow]%y-%m-%d %H:%M '
set -g status-justify left

# Increase history limit
set -g history-limit 65536

set -g default-terminal "tmux-256color"

# start numbering at 0
set -g base-index 0

#vi mode
set-window-option -g mode-keys vi

set-window-option -g xterm-keys on

bind '"' split-window -c '#{pane_current_path}'
unbind %

bind s split-window -v -c '#{pane_current_path}'
bind _ split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind | split-window -h -c '#{pane_current_path}'

bind c new-window      -c '#{pane_current_path}'
# prefix-C-x toggles fullscreen split
bind C-x resize-pane -Z
# vim bindings to change pane
# consider later hacking together tmux & vim's change-pane keybinds
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

bind < resize-pane -L 10
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# hardstatus line theme
#set-option -g status-fg white
#set-option -g status-bg default
#set-option -g status-justify centre
#set-option -g status-left-length 13
#set-option -g status-left '#[fg=green][ #[fg=black,bright]#h #[fg=green,nobright]][#[default]'
#set-option -g status-right-length 22
#set-option -g status-right '#[fg=green]][ #[fg=black,bright]%d/%m/%y %H:%M:%S #[fg=green,nobright]]#[fg=default]'
#set-window-option -g window-status-current-format '#[fg=red,bg=default]( #[fg=white,bright,bg=default]#I:#W#[fg=red,nobright,bg=default] )#[fg=default]'

set-option -sa terminal-overrides ',XXX:RGB'

# Plugins
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# override tmux-yank copy program to use the yank script:
set -g @override_copy_command 'yank > #{pane_tty}'

# Copy pasting from terminal - need to enter 'copy mode' first - '<prefix> ['
unbind P
unbind-key -T copy-mode-vi v
bind P paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
#Blockwise copy mode:
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel 'yank > #{pane_tty}'

# Theme
set -g @themepack 'powerline/default/cyan'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
